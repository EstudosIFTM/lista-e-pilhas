#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TAMANHO 101 

typedef struct No {
    char caractere;
    struct No* prox;
} No;

typedef struct Pilha {
    No* topo;
    int n;
} Pilha;

// Função para inicializar a pilha
void inicializarPilha(Pilha* pilha) {
    pilha->topo = NULL;
    pilha->n = 0;
}

// Função para inserir um valor na pilha
void inserir(Pilha* pilha, char valor) {
    No* novo = (No*)malloc(sizeof(No));
    if (novo == NULL) {
        perror("Erro ao alocar memória");
        exit(EXIT_FAILURE);
    }
    novo->caractere = valor;
    novo->prox = pilha->topo;
    pilha->topo = novo;
    pilha->n++;
}

// Função para remover um valor da pilha
void remover(Pilha* pilha) {
    if (pilha->n == 0) return;
    No* aux = pilha->topo;
    pilha->topo = pilha->topo->prox;
    free(aux);
    pilha->n--;
}

// Função para obter o topo da pilha
char topoPilha(Pilha* pilha) {
    if (pilha->topo == NULL) return '\0'; // Retorna um valor padrão se a pilha estiver vazia
    return pilha->topo->caractere;
}

int main() {
    char linha[MAX_TAMANHO];
    int numeroLinha = 1;
    Pilha pilha;

    inicializarPilha(&pilha);

    while (fgets(linha, MAX_TAMANHO, stdin)) {
        // Remove o caractere de nova linha do final da linha, se existir
        linha[strcspn(linha, "\n")] = '\0';

        if (strcmp(linha, "***END***") == 0) {
            break;
        }

        for (int i = 0; linha[i] != '\0'; i++) {
            char c = linha[i];
            if (c == '(' || c == '{') {
                inserir(&pilha, c);
            } else if (c == ')' || c == '}') {
                if (pilha.n == 0) {
                    printf("%d\n", numeroLinha);
                    return 0;
                } else {
                    char caractereAbertura = topoPilha(&pilha);
                    remover(&pilha);
                    if ((c == ')' && caractereAbertura != '(') || 
                        (c == '}' && caractereAbertura != '{')) {
                        printf("%d\n", numeroLinha);
                        return 0;
                    }
                }
            }
        }
        numeroLinha++;
    }

    if (pilha.n == 0) {
        printf("OK\n");
    } else {
        printf("%d\n", numeroLinha - 1);
    }

    return 0;
}
